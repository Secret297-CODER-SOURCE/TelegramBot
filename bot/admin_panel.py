from aiogram import Router, types, F
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from sqlalchemy import select, update
from db.sessions import get_db
from db.models import User

router = Router()

class AdminPanelStates(StatesGroup):
    setting_online_schedule = State()
    setting_random_online = State()
    granting_admin_rights = State()
    revoking_admin_rights = State()

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–¥–º–∏–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
async def is_admin_user(user_id: int) -> bool:
    async for db in get_db():
        result = await db.execute(select(User).where(User.id == user_id))
        user = result.scalar_one_or_none()
        return user and user.is_admin

# –ö–Ω–æ–ø–∫–∞ "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
@router.message(F.text == "üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_menu(message: types.Message):
    if not await is_admin_user(message.from_user.id):
        await message.answer("üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.")
        return

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–Ω–ª–∞–π–Ω–∞"), KeyboardButton(text="üé≤ –†–∞–Ω–¥–æ–º–∏–∑–∞—Ü–∏—è –æ–Ω–ª–∞–π–Ω–∞")],
            [KeyboardButton(text="üë§ –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞"), KeyboardButton(text="üö´ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞")],
            [KeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )
    await message.answer("üõ† –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=keyboard)

# üîπ –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞
@router.message(F.text == "üë§ –í—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞")
async def grant_admin_rights(message: types.Message, state: FSMContext):
    await state.set_state(AdminPanelStates.granting_admin_rights)
    await message.answer("üîê –í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")

@router.message(AdminPanelStates.granting_admin_rights)
async def save_admin_id(message: types.Message, state: FSMContext):
    telegram_id = message.text.strip()
    if not telegram_id.isdigit():
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Telegram ID.")
        return

    async for db in get_db():
        result = await db.execute(select(User).where(User.telegram_id == int(telegram_id)))
        user = result.scalar_one_or_none()
        if user:
            user.is_admin = True
            await db.commit()
            await message.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä!")
        else:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.")

    await state.clear()


# üîπ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞
@router.message(F.text == "üö´ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞")
async def revoke_admin_rights(message: types.Message, state: FSMContext):
    await state.set_state(AdminPanelStates.revoking_admin_rights)
    await message.answer("‚úÇÔ∏è –í–≤–µ–¥–∏—Ç–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")

@router.message(AdminPanelStates.revoking_admin_rights)
async def remove_admin(message: types.Message, state: FSMContext):
    telegram_id = message.text.strip()
    if not telegram_id.isdigit():
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π Telegram ID.")
        return

    async for db in get_db():
        result = await db.execute(select(User).where(User.telegram_id == int(telegram_id)))
        user = result.scalar_one_or_none()
        if user and user.is_admin:
            user.is_admin = False
            await db.commit()
            await message.answer(f"‚ùé –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {telegram_id} –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.")
        else:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º.")

    await state.clear()

# –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.message(F.text == "‚¨Ö –ù–∞–∑–∞–¥")
async def back_to_main_menu(message: types.Message):
    from bot.handlers import main_keyboard
    await message.answer("üîô –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_keyboard)
