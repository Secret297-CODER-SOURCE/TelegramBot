import os
import asyncio
from aiogram import Router, types
from telethon import TelegramClient
from telethon.errors import (
    FloodWaitError, UserBannedInChannelError, UserAlreadyParticipantError,
    AuthKeyUnregisteredError, InviteRequestSentError, ChatWriteForbiddenError
)
from telethon.tl.functions.channels import JoinChannelRequest
from telethon.tl.functions.messages import ImportChatInviteRequest
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from db.sessions import get_db
from db.models import TelegramSession
from bot.logger import logger

router = Router()
SESSIONS_PATH = "sessions/"

async def join_group(message: types.Message):
    """ –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ—Ç –≤—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª (–¥–∞–∂–µ –∑–∞–∫—Ä—ã—Ç—ã–π) –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç username """
    group_link = message.text.strip()

    if not group_link.startswith("https://t.me/"):
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Telegram-–≥—Ä—É–ø–ø—É (–ø—Ä–∏–º–µ—Ä: https://t.me/example_channel)")
        return

    await message.answer("üîç –ù–∞—á–∏–Ω–∞—é –ø–æ–¥–ø–∏—Å–∫—É –∞–∫–∫–∞—É–Ω—Ç–æ–≤...")

    successful_joins = 0
    failed_joins = 0

    async for db in get_db():
        sessions = await db.execute(select(TelegramSession))
        sessions = sessions.scalars().all()

        if not sessions:
            await message.answer("‚ö† –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏.")
            return

        for session in sessions:
            try:
                session_file_path = os.path.join(SESSIONS_PATH, session.session_file)

                if not os.path.exists(session_file_path):
                    failed_joins += 1
                    await message.answer(f"üö´ –§–∞–π–ª —Å–µ—Å—Å–∏–∏ `{session.session_file}` –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                    continue

                client = TelegramClient(session_file_path, session.api_id, session.api_hash)
                await client.connect()

                if not await client.is_user_authorized():
                    try:
                        logger.warning(f"üîÑ –ê–∫–∫–∞—É–Ω—Ç {session.user_id} –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω. –ü—Ä–æ–±—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
                        await client.start()
                    except AuthKeyUnregisteredError:
                        failed_joins += 1
                        await db.execute(TelegramSession.__table__.delete().where(TelegramSession.user_id == session.user_id))
                        await db.commit()
                        await message.answer(f"üö´ –°–µ—Å—Å–∏—è `{session.session_file}` —É—Å—Ç–∞—Ä–µ–ª–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –±–∞–∑—ã.")
                        await client.disconnect()
                        continue

                # üî• –ü–æ–ª—É—á–∞–µ–º username –∞–∫–∫–∞—É–Ω—Ç–∞
                try:
                    user = await client.get_me()
                    username = user.username if user.username else user.first_name
                except Exception as e:
                    logger.warning(f"‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å username: {e}")
                    username = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"

                try:
                    # üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ username –∏–ª–∏ invite link
                    if "/+" in group_link:
                        invite_hash = group_link.split("/+")[-1]
                        await client(ImportChatInviteRequest(invite_hash))  # ‚úÖ –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É
                    else:
                        await client(JoinChannelRequest(group_link))  # ‚úÖ –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –æ—Ç–∫—Ä—ã—Ç—É—é –≥—Ä—É–ø–ø—É

                    successful_joins += 1
                    await message.answer(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç **{username}** –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ {group_link}")

                except UserAlreadyParticipantError:
                    await message.answer(f"‚Ñπ **{username}** —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ {group_link}")

                except UserBannedInChannelError:
                    failed_joins += 1
                    await message.answer(f"üö´ **{username}** –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ {group_link}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")

                except InviteRequestSentError:
                    failed_joins += 1
                    await message.answer(f"üì© **{username}** –æ—Ç–ø—Ä–∞–≤–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ {group_link} (–∑–∞–∫—Ä—ã—Ç–∞—è –≥—Ä—É–ø–ø–∞).")

                except ChatWriteForbiddenError:
                    failed_joins += 1
                    await message.answer(f"üö´ **{username}** –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –≤ {group_link}, –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞.")

                except FloodWaitError as e:
                    await message.answer(f"‚ö† **Telegram –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è {username}.** –ñ–¥—ë–º {e.seconds} —Å–µ–∫—É–Ω–¥...")
                    await asyncio.sleep(e.seconds)

                finally:
                    await client.disconnect()
                    await asyncio.sleep(5)  # –ù–µ–º–Ω–æ–≥–æ –∂–¥—ë–º –º–µ–∂–¥—É –ø–æ–¥–ø–∏—Å–∫–∞–º–∏

            except Exception as e:
                failed_joins += 1
                await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —É –∞–∫–∫–∞—É–Ω—Ç–∞ {session.user_id}: {e}")

    await message.answer(f"üìä –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:\n"
                         f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {successful_joins}\n"
                         f"‚ùå –û—à–∏–±–∫–∏: {failed_joins}")
